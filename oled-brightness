#!/usr/bin/php
<?PHP
/*
# this script handles oled display brightness settings
# Many laptops change brightness via "background light" changes with FN-key combinations. But oled-displays do not have a "background" led to change that way. That given, the brightness can also be changed via xrandr setting. 
*/

$lastValue=$newValue=1.0; // default value
$userSettings['brightness'] = $newValue;
$userSettingsFile="/home/".posix_getpwuid(posix_geteuid())['name']."/.brightness";

## is there a user settings file, read it
if (is_readable($userSettingsFile)) {
	$userSettings=parse_ini_file($userSettingsFile);
	if(isset($userSettings["brightness"])) {
		$lastValue=$newValue=floatval($userSettings["brightness"]);
	}
}

## evaluate change parameter
if(isset($argv[1]) && (floatval($argv[1]) < 0 || floatval($argv[1]) > 0 )) {
	$change = $argv[1];
	// verify max 1.0, min 0.1 (0.0 whould turn the oled all black)
	if($lastValue+$change > 1) {
		$newValue = 1;
	} elseif($lastValue+$change < 0.1) {
		$newValue = 0.1;
	} else {
		$newValue = $lastValue+$change;
	}
	
	echo "set brightness to ".$newValue.PHP_EOL;
} else {
	echo "set brightness to last value ".$lastValue.PHP_EOL;
}

## find an xrandr
$sXrandr=$output=$return_value=null;
//$sXrandr=system('which xrandr', $return_value);
$sXrandr=exec('which xrandr', $output, $return_value);
if ($return_value > 0) {
	echo "failed getting xrandr executable (exit($return_value))".PHP_EOL;
	exit($return_value);
}
$sXrandr = trim($sXrandr);

## get display name
//$sDisplayName=system($sXrandr.' --listmonitors | head -n2 | tail -n1 | awk \'{ print $4 }\'', $return_value);
$sDisplayName=$output=$return_value=null;
exec($sXrandr.' --listmonitors', $output, $return_value);
if ($return_value > 0) {
	echo "failed getting internal display name (exit($return_value))".PHP_EOL;
	exit($return_value);
} else {
	$sDisplayName=trim(array_reverse(explode(' ', $output[1]))[0]);
}

## set display brightness
system($sXrandr.' --output '.$sDisplayName.' --brightness '.$newValue, $return_value);
if ($return_value > 0) {
	echo "failed setting internal display brightness ((exit($return_value))".PHP_EOL;
	exit($return_value);
}


## persisting usersettings
$newSettings = "";
if(!file_exists($userSettingsFile)) {
	touch($userSettingsFile);
}

if ((file_exists($userSettingsFile) && is_writeable($userSettingsFile)) ||
!file_exists($userSettingsFile)) {
	foreach($userSettings as $k => $v) {
		if($k === "brightness") {
			$newSettings.="$k=$newValue".PHP_EOL;
		} else {
			$newSettings.="$k=$v".PHP_EOL;
		}
	}

	$res = file_put_contents($userSettingsFile, $newSettings);
	if(is_int($res) && $res > 0) {
		echo "usersettings updated".PHP_EOL;
	}
	else {
		echo "failed writing $userSettingsFile".PHP_EOL;
	}
}
else {
	echo "file not writeable: could not persist new value in user settings ($userSettingsFile)".PHP_EOL;
}
